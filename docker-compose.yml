version: '3'

services:
  database:
    image: 'postgres:10.4-alpine'
    environment:
      POSTGRES_DB: 'xtrd_api'
      POSTGRES_USER: 'xtrd_api'
      POSTGRES_PASSWORD: 'xtrd_api'
    volumes:
      - ./docker-data/postgresql/:/var/lib/postgresql/data
    ports:
      - '5434:5432'

  api:
    build: '.'
    # Uncomment the command below to run api manually (useful for debugging),
    # after the docker compose setup start, run docker-compose exec api sh
    # and then ./docker/start.sh
    # The app can then be stopped / debugged with ipdb or other debugger.
    #
    # command: /bin/sh -c "sleep 500000000 & wait"
    links:
      - database
    volumes:
      - ./:/srv/app
    ports:
      - "9002:8000"
    depends_on:
      - database
    env_file:
      - docker/local.env

  # redis:
  #     image: redis:4.0.9
  #     ports:
  #         - "6379:6379"
  #     volumes:
  #         - ./docker-data/redis:/data

  # celery_worker:
  #   restart: always
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./:/srv/app
  #   command: /bin/sh -c "cd /srv/app && celery -A app worker -l info"
  #   # command: /bin/sh -c "sleep 500000000 & wait"
  #   env_file:
  #     - docker/local.env
  #   depends_on:
  #     - database

  # celery_beat:
  #   restart: always
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./:/srv/app
  #   command: /bin/sh -c "celery -A app beat -l info"
  #   # command: /bin/sh -c "sleep 500000000 & wait"
  #   env_file:
  #     - docker/local.env
  #   depends_on:
  #     - database
